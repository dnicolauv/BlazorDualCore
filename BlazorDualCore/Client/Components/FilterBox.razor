@using BlazorDualCore.Shared
@inject IHttpClientFactory _httpClientFactory

<div class="flex flex-col p-4 space-y-4 border-solid border-2 rounded shadow-sm">

    <div class="flex flex-row justify-between">
        <span>@Title</span>
        <svg class="h-4 w-4 text-gray-500 cursor-pointer" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
    </div>

    <div class="flex flex-col space-y-2">
        @foreach (var item in items)
        {            
            <div class="flex items-center">
                <input id="@item.Id" name="@(Type.Equals("radio") ? items.First().Id : item.Name)" type="@Type" 
                       class="h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 @(Type.Equals("radio") ? "rounded-full" : "rounded")">
                <label for="remember_me" class="ml-2 block text-sm text-gray-600">
                    @item.Name
                </label>
            </div>
        }
    </div>

</div>

@code {
    [Parameter]
    public string Type { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string ApiEndpoint { get; set; }

    public List<Base> items = new List<Base>();

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("1");
        var _httpClient = _httpClientFactory.CreateClient("BlazorDualCore.API");
        items = await _httpClient.GetFromJsonAsync<List<Base>>(ApiEndpoint);
        Console.WriteLine(items.Count);

        //await base.OnInitializedAsync();
    }

    //protected override async Task OnParametersSetAsync()
    //{
    //    var _httpClient = _httpClientFactory.CreateClient("BlazorDualCore.API");
    //    items = await _httpClient.GetFromJsonAsync<List<Base>>(ApiEndpoint);

    //    await base.OnParametersSetAsync();
    //}
}
